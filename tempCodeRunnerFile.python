import pandas as pd
import numpy as np
from sklearn.ensemble import GradientBoostingRegressor
from sklearn.model_selection import cross_val_score
from sklearn.preprocessing import RobustScaler
import joblib

# Load data
data = pd.read_csv('BTP ML Model - Sheet1.csv')
X = data[['H/h', 'S/h', 'GSI', 'mi', 'L2/L1']]
y = data['Collapse multiplier']

# Feature scaling
scaler = RobustScaler()
X_scaled = scaler.fit_transform(X)

# Initialize best-performing model (replace with your chosen algorithm)
model = GradientBoostingRegressor(
    n_estimators=200,
    learning_rate=0.1,
    max_depth=4,
    random_state=42
)

# Cross-validation (5-fold)
cv_scores = cross_val_score(model, X_scaled, y, 
                          cv=5, scoring='r2')
print(f"Cross-validated R² scores: {cv_scores}")
print(f"Average R²: {np.mean(cv_scores):.3f}")

# Final training on full dataset
model.fit(X_scaled, y)

# Save artifacts for deployment
joblib.dump(model, 'final_model.pkl')
joblib.dump(scaler, 'scaler.pkl')

print("Model trained on full dataset and saved!")
